{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\olcay\\\\OneDrive\\\\Masa\\xFCst\\xFC\\\\React\\\\class-notes\\\\DE-08-lifeCycle\\\\src\\\\components\\\\Clock.jsx\",\n  _s = $RefreshSig$();\n// //?==================================================================\n// //?                       USEEFFECT HOOK\n// //?==================================================================\n// //! The Effect Hook,function componentlerde yan etkiler gerçekleştirmenizi sağlar.\n// //! useEffect Hook'u componentDidMount, componentDidUpdate ve componentWillUnmount olarak düşünebiliriz..setInterval, fetch axios ile veri çekme ve mesela dizi her değiştiğinde set et (istediğim bişeyi yap) demek için kullanılır\n\n// //! useEffect(() => {\n// //*   /* ComponentDidMount code */\n// //! }, []);\n\n// //! useEffect(() => {\n// //*   */ componentDidUpdate code */\n// //! }, [var1, var2]);\n\n// //! useEffect(() => {\n// //!   return () => {\n// //*     //* componentWillUnmount code */\n// //!   };\n// //! }, []);\n\n// //! useEffect(() => {\n// //*   //* componentDidMount code + componentDidUpdate code */\n\n// //!   return () => {\n// //*     //* componentWillUnmount code */\n// //!   };\n// //! }, [var1, var2]);\n\nimport React, { useEffect, useState } from \"react\";\nimport moment from \"moment\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Clock = () => {\n  _s();\n  const [zaman, setZaman] = useState(moment());\n  const [count, setCount] = useState(0);\n  //!comppnentDidMount=ilk render da çalış birdaha burayı görme\n  useEffect(() => {\n    const time = setInterval(() => {\n      setZaman(moment());\n      console.log(\"merhaba\");\n    }, 1000);\n\n    //!component kapandığında yada başka sayfaya gidildiğinde çalışma dursun istersek\n    return () => {\n      clearInterval(time);\n      console.log(\"başka sayfaya gidildiği için interval öldü\");\n    };\n  }, []);\n  //!count değişkeni her güncellendiğinde alttakiler olsun\n  useEffect(() => {\n    console.log(\"count değişti\");\n  }, [count]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [zaman.format(\"HH\"), zaman.format(\"ss\") % 2 === 0 ? \":\" : \" \", zaman.format(\"mm\"), zaman.format(\"ss\") % 2 === 0 ? \":\" : \" \", zaman.format(\"ss\"), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-secondary\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"btn btn-warning\",\n        onClick: () => setCount(count + 1),\n        children: \"ARTTIR\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: count\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(Clock, \"Llk1/hqXgDy53qgsHGUN2vAU28U=\");\n_c = Clock;\nexport default Clock;\nvar _c;\n$RefreshReg$(_c, \"Clock\");","map":{"version":3,"names":["React","useEffect","useState","moment","Clock","zaman","setZaman","count","setCount","time","setInterval","console","log","clearInterval","format"],"sources":["C:/Users/olcay/OneDrive/Masaüstü/React/class-notes/DE-08-lifeCycle/src/components/Clock.jsx"],"sourcesContent":["// //?==================================================================\r\n// //?                       USEEFFECT HOOK\r\n// //?==================================================================\r\n// //! The Effect Hook,function componentlerde yan etkiler gerçekleştirmenizi sağlar.\r\n// //! useEffect Hook'u componentDidMount, componentDidUpdate ve componentWillUnmount olarak düşünebiliriz..setInterval, fetch axios ile veri çekme ve mesela dizi her değiştiğinde set et (istediğim bişeyi yap) demek için kullanılır\r\n\r\n// //! useEffect(() => {\r\n// //*   /* ComponentDidMount code */\r\n// //! }, []);\r\n\r\n// //! useEffect(() => {\r\n// //*   */ componentDidUpdate code */\r\n// //! }, [var1, var2]);\r\n\r\n// //! useEffect(() => {\r\n// //!   return () => {\r\n// //*     //* componentWillUnmount code */\r\n// //!   };\r\n// //! }, []);\r\n\r\n// //! useEffect(() => {\r\n// //*   //* componentDidMount code + componentDidUpdate code */\r\n\r\n// //!   return () => {\r\n// //*     //* componentWillUnmount code */\r\n// //!   };\r\n// //! }, [var1, var2]);\r\n\r\nimport React, { useEffect, useState } from \"react\";\r\nimport moment from \"moment\";\r\nconst Clock = () => {\r\n    const [zaman, setZaman] = useState(moment());\r\n    const [count, setCount] = useState(0);\r\n    //!comppnentDidMount=ilk render da çalış birdaha burayı görme\r\n    useEffect(() => {\r\n        const time = setInterval(() => {\r\n            setZaman(moment());\r\n            console.log(\"merhaba\");\r\n        }, 1000);\r\n\r\n        //!component kapandığında yada başka sayfaya gidildiğinde çalışma dursun istersek\r\n        return () => {\r\n            clearInterval(time);\r\n            console.log(\"başka sayfaya gidildiği için interval öldü\");\r\n        };\r\n    }, []);\r\n    //!count değişkeni her güncellendiğinde alttakiler olsun\r\n    useEffect(() => {\r\n        console.log(\"count değişti\");\r\n\r\n\r\n    }, [count])\r\n\r\n\r\n    return (\r\n        <div>\r\n            {zaman.format(\"HH\")}\r\n\r\n            {zaman.format(\"ss\") % 2 === 0 ? \":\" : \" \"}\r\n\r\n            {zaman.format(\"mm\")}\r\n\r\n            {zaman.format(\"ss\") % 2 === 0 ? \":\" : \" \"}\r\n\r\n            {zaman.format(\"ss\")}\r\n\r\n            <div className=\"bg-secondary\">\r\n                <button className=\"btn btn-warning\" onClick={() => setCount(count + 1)}>\r\n                    ARTTIR\r\n                </button>\r\n                <h1>{count}</h1>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Clock;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,MAAM,MAAM,QAAQ;AAAC;AAC5B,MAAMC,KAAK,GAAG,MAAM;EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGJ,QAAQ,CAACC,MAAM,EAAE,CAAC;EAC5C,MAAM,CAACI,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,CAAC,CAAC;EACrC;EACAD,SAAS,CAAC,MAAM;IACZ,MAAMQ,IAAI,GAAGC,WAAW,CAAC,MAAM;MAC3BJ,QAAQ,CAACH,MAAM,EAAE,CAAC;MAClBQ,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;IAC1B,CAAC,EAAE,IAAI,CAAC;;IAER;IACA,OAAO,MAAM;MACTC,aAAa,CAACJ,IAAI,CAAC;MACnBE,OAAO,CAACC,GAAG,CAAC,4CAA4C,CAAC;IAC7D,CAAC;EACL,CAAC,EAAE,EAAE,CAAC;EACN;EACAX,SAAS,CAAC,MAAM;IACZU,OAAO,CAACC,GAAG,CAAC,eAAe,CAAC;EAGhC,CAAC,EAAE,CAACL,KAAK,CAAC,CAAC;EAGX,oBACI;IAAA,WACKF,KAAK,CAACS,MAAM,CAAC,IAAI,CAAC,EAElBT,KAAK,CAACS,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,EAExCT,KAAK,CAACS,MAAM,CAAC,IAAI,CAAC,EAElBT,KAAK,CAACS,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,GAAG,GAAG,GAAG,EAExCT,KAAK,CAACS,MAAM,CAAC,IAAI,CAAC,eAEnB;MAAK,SAAS,EAAC,cAAc;MAAA,wBACzB;QAAQ,SAAS,EAAC,iBAAiB;QAAC,OAAO,EAAE,MAAMN,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAE9D,eACT;QAAA,UAAKA;MAAK;QAAA;QAAA;QAAA;MAAA,QAAM;IAAA;MAAA;MAAA;MAAA;IAAA,QACd;EAAA;IAAA;IAAA;IAAA;EAAA,QACJ;AAEd,CAAC;AAAC,GA5CIH,KAAK;AAAA,KAALA,KAAK;AA8CX,eAAeA,KAAK;AAAC;AAAA"},"metadata":{},"sourceType":"module"}